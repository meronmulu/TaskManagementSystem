generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

enum Role {
    ADMIN
    MANAGER
    EMPLOYEE
    CLIENT
}

enum Status {
    PENDING
    IN_PROGRESS
    COMPLETED
}

enum IssueStatus {
    OPEN
    IN_PROGRESS
    RESOLVED
    CLOSED
}

enum Priority {
    LOW
    MEDIUM
    HIGH  
    URGENT
}

enum NotificationType {
    TASK_ASSIGNED
    ISSUE_REPORTED
    TASK_COMPLETED
    DEADLINE_APPROACHING
    GENERAL_NOTIFICATION
}

model User {
    userId         String       @id @default(uuid()) 
    name           String         
    email          String       @unique
    password       String
    role           Role         @default(EMPLOYEE)
    projects       Project[]      
    tasks          Task[]
    issues         Issue[]
    notifications  Notification[]
    createdAt      DateTime     @default(now())
    updatedAt      DateTime     @updatedAt
}

model Project {
    project_id      String      @id @default(uuid()) 
    project_name    String 
    description     String?     
    status          Status      @default(PENDING)
    createdBy       User        @relation(fields: [createdById], references: [userId]) 
    createdById     String      
    tasks           Task[]
    issues          Issue[]
    createdAt       DateTime    @default(now())
    updatedAt       DateTime    @updatedAt
}

model Task {
    task_id        String   @id @default(uuid()) 
    title          String
    description    String?       
    status         Status   @default(PENDING)
    priority       Priority @default(MEDIUM) 
    project        Project  @relation(fields: [projectId], references: [project_id])
    projectId      String  
    assignedTo     User?    @relation(fields: [assignedToId], references: [userId])
    assignedToId   String?  
    dueDate        DateTime
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt  
}

model Issue {
    issue_id       String   @id @default(uuid())  
    title          String
    description    String?       
    status         IssueStatus @default(OPEN)
    priority       Priority @default(MEDIUM) 
    project        Project  @relation(fields: [projectId], references: [project_id]) 
    projectId      String 
    reportedBy     User     @relation(fields: [reportedById], references: [userId]) 
    reportedById   String 
    createdAt      DateTime @default(now())
    updatedAt      DateTime @updatedAt
}

model Notification {
    notification_id String      @id @default(uuid()) 
    message         String   
    type            NotificationType
    user            User        @relation(fields: [userId], references: [userId])  
    userId          String     
    isRead          Boolean     @default(false)
    createdAt       DateTime    @default(now())
}
